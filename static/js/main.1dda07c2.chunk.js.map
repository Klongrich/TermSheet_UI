{"version":3,"sources":["images/logo-lid.png","config.js","utils/calculate_bonus.js","components/BonusRange.js","components/Result.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","bonusData","Percentage","Amount","get_liq_percentage","totalAmount","ref","sampleAmount","bonusPrice","targetPrice","eth_liq","Result","token_supply","ETH_HardCap","map","data","console","log","bonusRange","token_price","Style","parseFloat","toFixed","get_total_tokens","ResultsContainer","styled","div","Results","hardcap","softCap","liq","supply","staking","team","marketing","unlocked","ethLiq","remaining","lidLiq","Token","Container","App","useState","setHardcap","softcap","setSoftCap","setSupply","setLiq","setStaking","setTeam","setMarketing","setUnlocked","setEthliq","setLidliq","reccomendedLiq","get_total_distrubtion","get_token_price","src","LidLogo","type","placeholder","step","onChange","e","target","value","min","max","calculate_liq","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.1dda07c2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo-lid.20b6644e.png\";","export const bonusData = [\n    {\n        Percentage: 0.25,\n        Amount: 200.00\n    },\n    {\n        Percentage: 0.20,\n        Amount: 300.00\n    },\n    {\n        Percentage: 0.15,\n        Amount: 500.00\n    },\n    {\n        Percentage: 0.10,\n        Amount: 250.00\n    }\n]","import React , {useEffect, useState} from 'react';\nimport {bonusData} from '../config'\n\nexport function get_liq_percentage({token_supply, ETH_HardCap}) {\n    \n    var Result;\n    var presale_tokens;\n\n    token_supply = 300000.00;\n    ETH_HardCap = 1250.00;\n    presale_tokens = token_supply * 0.3\n\n    var totalAmount;\n    var ref;\n    var sampleAmount;\n    var bonusPrice;\n    var targetPrice;\n    var eth_liq;\n    var Result;\n\n    totalAmount = 0;\n    {bonusData.map(data => \n        totalAmount += ((data.Percentage * data.Amount) + data.Amount)\n    )}\n\n    ref = ((bonusData[0].Amount) + (bonusData[0].Percentage * bonusData[0].Amount)) / totalAmount;\n    sampleAmount = presale_tokens  * ref;\n\n    bonusPrice = sampleAmount / bonusData[0].Amount;\n    targetPrice = bonusPrice / (1 + bonusData[0].Percentage);\n\n    eth_liq = ((ETH_HardCap / 2) * targetPrice) / token_supply;\n\n    Result = eth_liq / 0.83322517845;\n    \n    //For Testing and Debuging\n    console.log(\"Total Amount: \" + totalAmount);\n    console.log(\"ref: \" + ref);\n    console.log(\"sampleAmount: \" + sampleAmount);\n    console.log(\"bonusPrice: \" + bonusPrice);\n    console.log(\"targetPrice: \" + targetPrice);\n    console.log(\"eth_liq: \" + eth_liq);\n    console.log(\"Result: \", Result);\n\n    return (Result)\n}","import React , {useEffect, useState} from 'react';\nimport {bonusData} from '../config'\n\nexport default function bonusRange({token_price}) {\n\n    function get_total_tokens(){\n        var totalAmount;\n\n        totalAmount = 0;\n        {bonusData.map(data => \n            totalAmount += parseFloat((data.Amount * (parseFloat(token_price) * data.Percentage + parseFloat(token_price))).toFixed(2))\n        )}\n        return (totalAmount);\n    }\n    \n    return (\n        <>\n         <div Style=\"display:inline-block;\n            margin-bottom: 100px;\n            background-color: white;\n            color: #0c65EB;\n            width: 398px;\">\n            <h2> Bonus Range </h2>\n\n        <ul Style=\"float: left\">\n            <li>Range</li>\n            {bonusData.map(data => \n                <li> {data.Amount} </li>    \n            )}\n        </ul>\n\n        <ul Style=\"float: left\">\n            <li>Bonus</li>\n            {bonusData.map(data => \n                <li> {data.Percentage * 100}% </li>    \n            )}\n        </ul>\n\n        <ul Style=\"float: left\">\n            <li>Price</li>\n            {bonusData.map(data => \n                <li> {(parseFloat(token_price) * data.Percentage + parseFloat(token_price)).toFixed(0)} </li>    \n            )}\n        </ul>\n\n        <ul Style=\"display: inline-block\">\n            <li> Tokens </li>\n            {bonusData.map(data => \n                <li> { (data.Amount * (parseFloat(token_price) * data.Percentage + parseFloat(token_price))).toFixed(0)}</li>    \n            )}   \n        </ul>\n\n        <p Style=\"margin-left: 180px;\n                 font-weight: bold;\">Total Tokens: {get_total_tokens().toFixed(0)} </p>\n        </div>\n      </>\n    )\n}","import React , {useEffect, useState} from 'react';\nimport styled from \"styled-components\";\nimport { CSVLink } from \"react-csv\";\n\nimport get_token_price from '../utils/calculate_toke_price'\nimport {useHardCap} from '../state/index'\n\nimport data from '../data.json';\n\nconst ResultsContainer = styled.div`\n  font-family: Gotham, sans-serif;\n  background-color:#737373;\n  \n  margin-top: 5px;\n  margin-bottom: 40px;\n\n  font-weight: bold;\n\n  ul {\n    margin-right: 80px;\n    margin-top: -5px;\n    width: 250px;\n  }\n\n  h2 {\n    margin-right: 750px\n  }\n\n`\n\nexport default function Results ( {\n  token_price,\n  hardcap,\n  softCap,\n  supply,\n  liq,\n  staking,\n  team,\n  marketing,\n  unlocked,\n  remaining,\n  ethLiq,\n  lidLiq\n}) {\n    return (\n        <>\n        <ResultsContainer> \n            <h2> Result: ${data.Token}</h2>\n\n            <ul Style=\"float: left\">\n                <li> Token Price: {token_price} </li>\n                <li> LIQ: {liq}%  </li>\n                <li>  Hardcap: {hardcap}  </li>\n                <li> Softcap: {softCap} </li>\n            </ul>\n\n            <ul Style=\"float: left\">\n                <li>Staking: {staking}% </li>\n                <li>Team: {team}% </li>\n                <li>Marketing: {marketing}% </li>\n                <li>Unlocked: {unlocked} 5% </li>\n            </ul>\n\n            <ul Style=\"display: inline-block\">\n                <li>Presale: 30%</li>\n                <li>Liq (eth): {ethLiq}% </li>\n                <li>Lia (lid): {lidLiq}% </li>\n                <li>LID Fee: 1%</li>\n            {/*   <li>Total {get_total_distrubtion()}% </li> */}\n            </ul>\n\n\n            <br /> \n\n            <button Style=\"font-size: 18px;\n                            display: inline-block;\n                            border:2px solid #D8E0E7;\n                            border-radius:25px;\n                            background-color: #D8E0E7;\n                            width: 173px;\n                            height: 35px;\n                            margin-bottom:20px;\n                            margin-left: 30px;\n                            z-index: 2;\n                            \"\n            // onClick={() => calculate_outcome()}\n            >\n                Submit\n            </button>  \n\n            <br />\n\n            {/* <CSVLink data={csvData}>Download CSV</CSVLink>    */}   \n      </ResultsContainer> \n    </>\n    )\n}","import React , {useEffect, useState} from 'react';\nimport styled from \"styled-components\";\nimport { CSVLink } from \"react-csv\";\n\nimport data from './data.json';\nimport LidLogo from './images/logo-lid.png';\n\nimport {get_liq_percentage} from './utils/calculate_bonus'\nimport {useHardCap} from './state/index'\n\nimport BonusRange from './components/BonusRange'\nimport Result from './components/Result'\n\nconst Container = styled.div`\n  font-family: 'Gotham', sans-serif;\n  background-color: #E4E4E4;;\n  margin-top: -20px;\n  padding-top: 20px;\n\n  div {\n    background-color: #4A4A4A;\n    padding-right: 50px;\n    border: 2px solid #E4E4E4;\n    border-radius: 15px;\n    color: #E4E4E4;\n    margin-left: 18px;\n    margin-right: 18px;\n  }\n  \n  ul {\n    list-style-type: none;\n  }\n\n  li {\n    padding-top: 5px;\n  }\n\n  h2 {\n    margin-left: 40px;\n  }\n\n  input {\n    margin-top: 3px;\n    border-radius: 5px;\n    border: 2px solid black;\n    padding: 5px;\n    width: 250px;\n  }\n`\n\nfunction App() {\n\n  const [hardcap, setHardcap] = useState(data.hardcap);\n  const [softCap, setSoftCap] = useState(data.softcap);\n  const [supply, setSupply] = useState(data.supply);\n  const [liq, setLiq] = useState(data.liq);\n\n  const [staking, setStaking] = useState(data.staking);\n  const [team, setTeam] = useState(data.team);\n  const [marketing, setMarketing] = useState(data.marketing);\n  const [unlocked, setUnlocked] = useState(data.unlocked)\n\n  const [ethLiq, setEthliq] = useState(data.ethLiq);\n  const [lidLiq, setLidliq] = useState(data.lidLiq);\n\n  const [reccomendedLiq, setReccomendedLiq] = useState(0);\n\n  //const [presale, setPresale] = useState(); Always 30%\n\n  function calculate_outcome() {\n    get_total_distrubtion();\n    get_token_price();\n    setLiq(get_liq_percentage(supply , hardcap))\n  }\n\n  function get_total_distrubtion() {\n\n    console.log(parseFloat(marketing));\n    console.log(parseFloat(staking));\n    console.log(parseFloat(team));\n\n    //36 comes from 30% presale, 5% unlocked, 1% LID fee\n    return((parseFloat(marketing) \n    + parseFloat(staking) \n    + parseFloat(team) \n    + parseFloat(ethLiq)\n    + parseFloat(lidLiq)\n    + 36).toFixed(2))\n  }\n\n  function get_token_price() {\n    return (\n      (parseFloat(parseFloat(supply) * (ethLiq / 100)) / (parseFloat(hardcap) * 0.5)).toFixed(2)\n    )\n  };\n\n  function calculate_liq(liq) {\n    setEthliq(parseFloat(liq * 0.83).toFixed(2));\n    setLidliq(parseFloat(liq * 0.17).toFixed(2))\n    setLiq(parseFloat(liq).toFixed(2));\n  }\n\n  // const csvData = [\n  //   [\"Token Presale\"],\n  //   [\"Price\", get_token_price()],\n  //   [\"Refferall Fee\", \"2.5%\"],\n  //   [\"Hardcap\", hardcap],\n  //   [\"Softcap\", softCap],\n  //   [\"Supply\", supply],\n  //   [\"liq\", liq],\n  //   [\"\", \"\"],\n  //   [\"Token Distribution\"],\n  //   [\"Fund\", \"Quantity\"],\n  //   [\"Staking\", staking],\n  //   [\"Presale\", \"30%\"],\n  //   [\"liq (xxx/ETH)\", ethLiq],\n  //   [\"liq (xxx/LID)\", lidLiq],\n  //   [\"Team\", team ],\n  //   [\"Marketing\", marketing],\n  //   [\"Unlocked: 5%\", unlocked],\n  //   [\"\", \"\"],\n  //   [\"Ether Distribution (%)\"],\n  //   [\"Fund\", \"Quantity\", \"Remaining\", softCap, hardcap],\n  //   [\"liq (XXX/ETH)\", \"50.00%\", \"50.00%\", \"\", \"\"],\n  //   [\"liq (XXX/LID)\", \"10.00%\", \"40.00%\", \"\", \"\"],\n  //   [\"TEAM+FUND\", \"20.00%\", \"20.00%\", \"\", \"\"],\n  //   [\"LID\", \"5.00%\", \"15.00%\", \"\", \"\"],\n  //   [\"Token Burn\", \"15.00%\", \"0.00%\", \"\", \"\"],\n  // ];\n\n  \n\n  return (\n\n    <>\n    <Container>\n    <img Style=\"width: 50px;\n                height: 50px;\n                margin-left: 20px;\n                margin-bottom: -70px;\"src={LidLogo} />\n\n    <h2 Style=\" font-size: 28px;\n                color: #0c65EB;\n                margin-left: 90px;\n                \">\n                Term Sheet App </h2>\n\n      <div Style=\"float: left;\n                  background: linear-gradient(0deg, rgba(12,101,235,1) 0%, rgba(28,158,247,1) 100%);\n                  color: white;\"> \n\n      <h2>Token Presale</h2>\n      <ul>\n        <li> HardCap <br />\n          <input type=\"number\" \n                  placeholder={hardcap} \n                  step=\"0.01\"\n                  onChange={e => setHardcap(e.target.value)} />\n        </li>\n\n\n        <li>SoftCap <br />\n          <input type=\"number\" \n                 placeholder={softCap} \n                 step=\"0.01\"\n                 onChange={e => setSoftCap(e.target.value)} />\n        </li>\n\n\n        <li>Supply <br />\n          <input  type=\"number\" \n                  placeholder={supply} \n                  step=\"0.01\"\n                  onChange={e => setSupply(e.target.value)} />\n        </li>\n\n        <li>LIQ <br />\n          <input  type=\"number\" \n                  placeholder={liq + \"%\"}\n                  step=\"0.01\" \n                  min=\"0\"\n                  max=\"100\"\n                  onChange={e => calculate_liq(e.target.value)} />\n        </li>\n\n        <br />\n        <li Style=\"color: #7FFF00;\n                   font-weight: bold\"> Reccomended LIQ: {reccomendedLiq.toFixed(2)}% </li>\n        <br />\n      </ul>\n      </div>\n\n      <div Style=\"float: left;\n              background: linear-gradient(0deg, rgba(12,101,235,1) 0%, rgba(28,158,247,1) 100%);\n              color: white;\">\n      <h2> Token Distribution </h2>\n      <ul>\n        <li>Staking <br />\n          <input  type=\"number\" \n                  placeholder={staking + \"%\"} \n                  step=\"0.01\" \n                  onChange={e => setStaking(e.target.value)} />\n        </li>\n\n        <li>Team <br /> \n          <input  type=\"number\" \n                  placeholder={team + \"%\"}\n                  step=\"0.01\" \n                  onChange={e => setTeam(e.target.value)} />\n        </li>\n\n        <li> Marketing <br />\n          <input type=\"number\" \n                 placeholder={marketing + \"%\"}\n                 step=\"0.01\" \n                 onChange={e => setMarketing(e.target.value)} />  \n        </li> \n\n        <li> Unlocked <br />\n          <input type=\"text\" \n                 placeholder={unlocked}\n                 onChange={e => setUnlocked(e.target.value)} />  \n        </li> \n        \n        <br />\n        <li Style=\"color: #8B0000;\n                   font-weight: bold\"> Distrubtion Remaing: {((get_total_distrubtion() - 100) * -1).toFixed(2)}% </li> <br />\n      </ul>\n    </div>\n\n\n\n\n    <BonusRange token_supply={supply}\n                token_price={get_token_price()}\n                 />\n\n    <Result token_price={get_token_price()}\n            hardcap={hardcap}\n            softCap={softCap}\n            supply={supply}\n            liq={liq}\n            staking={staking}\n            team={team}\n            marketing={marketing}\n            unlocked={unlocked}\n            ethLiq={ethLiq}\n            lidLiq={lidLiq}/>\n\n    </Container>\n\n    {/* For Debugging */}\n    <p> {get_liq_percentage(supply , hardcap)}</p>\n    </>\n    \n  )\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}