{"version":3,"sources":["images/logo-lid.png","config.js","components/BonusRange.js","components/Result.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","BonusData","Percentage","Amount","bonusOptions","id","type","info","customStyles","content","top","left","right","bottom","marginRight","transform","padding","paddingLeft","paddingRight","paddingBottom","borderRadius","SelectBonusStructer","styled","div","Input","input","BonusRange","subtitle","token_price","hardcap","supply","useState","modalIsOpen","setIsOpen","HardCap","setHardCap","bonusData","setbonusData","value","newRanges","setNewRanges","newPercentages","setNewPercentages","newBonusRange","updateNewRanges","i","event","values","target","sum","map","data","parseFloat","console","log","updateHardCap","handleAdd","ranges","percentages","push","closeModal","Style","onClick","isOpen","onAfterOpen","style","color","onRequestClose","ref","_subtitle","updateBonusData","idx","key","placeholder","onChange","e","updateNewPercentages","onKeyDown","keyCode","splice","handleRemove","length","create_new_bonus","toFixed","token_supply","ETH_HardCap","totalAmount","Result","get_liq_percentage","get_total_tokens","ResultsContainer","Results","softCap","liq","staking","team","marketing","unlocked","ethLiq","remaining","lidLiq","csvData","Token","Container","App","setHardcap","softcap","setSoftCap","setSupply","setLiq","setStaking","setTeam","setMarketing","setUnlocked","setEthliq","setLidliq","reccomendedLiq","get_total_distrubtion","get_token_price","src","LidLogo","step","min","max","calculate_liq","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"8SAAAA,EAAOC,QAAU,IAA0B,sC,yMCA9BC,EAAY,CACrB,CACIC,WAAY,IACZC,OAAQ,KAEZ,CACID,WAAY,GACZC,OAAQ,KAEZ,CACID,WAAY,IACZC,OAAQ,KAEZ,CACID,WAAY,GACZC,OAAQ,M,8mBCRhB,IAAMC,EAAe,CACjB,CACIC,GAAI,IACJC,KAAM,YACNC,KAAM,CAAC,CACCL,WAAY,IACZC,OAAQ,KAEZ,CACID,WAAY,GACZC,OAAQ,KAEZ,CACID,WAAY,IACZC,OAAQ,KAEZ,CACID,WAAY,GACZC,OAAQ,OAGpB,CACIE,GAAI,IACJC,KAAM,WACNC,KAAO,CAAC,CACJL,WAAY,IACZC,OAAQ,KAEZ,CACID,WAAY,GACZC,OAAQ,KAEZ,CACID,WAAY,IACZC,OAAQ,KAEZ,CACID,WAAY,IACZC,OAAQ,OAGhB,CACIE,GAAI,IACJC,KAAM,YACNC,KAAO,CAAC,CACJL,WAAY,GACZC,OAAQ,KAEZ,CACID,WAAY,GACZC,OAAQ,KAEZ,CACID,WAAY,GACZC,OAAQ,KAEZ,CACID,WAAY,EACZC,OAAQ,OAGhB,CACIE,GAAI,IACJC,KAAM,WACNC,KAAM,CAAC,CACHL,WAAY,KACZC,OAAQ,KAEZ,CACID,WAAY,KACZC,OAAQ,KAEZ,CACID,WAAY,KACZC,OAAQ,KAEZ,CACID,WAAY,KACZC,OAAQ,QAMdK,EAAe,CACnBC,QAAU,CACRC,IAAwB,QACxBC,KAAwB,MACxBC,MAAwB,OACxBC,OAAwB,OACxBC,YAAwB,OACxBC,UAAwB,wBACxBC,QAAU,IACVC,YAAa,OACbC,aAAc,OACdC,cAAe,OACfC,aAAc,SAIZC,EAAsBC,IAAOC,IAAV,KAcnBC,EAAQF,IAAOG,MAAV,KAcI,SAASC,EAAT,GAAsD,IAC7DC,EAD6BC,EAA+B,EAA/BA,YAAqBC,GAAU,EAAlBC,OAAkB,EAAVD,SAAU,EAG9BE,oBAAS,GAHqB,mBAGzDC,EAHyD,KAG3CC,EAH2C,OAIlCF,mBAASF,GAJyB,mBAIzDK,EAJyD,KAIhDC,EAJgD,OAK9BJ,mBAAS9B,GALqB,mBAKzDmC,EALyD,KAK9CC,EAL8C,OAO9BN,mBAAS,CAAC,CAACO,MAAO,QAPY,mBAOzDC,EAPyD,KAO9CC,EAP8C,OAQpBT,mBAAS,CAAC,CAACO,MAAO,QARE,mBAQzDG,EARyD,KAQzCC,EARyC,OAUtBX,mBAAS,CAAE,CAAC7B,WAAYuC,EAAiBtC,OAAQoC,KAV3B,mBAUzDI,EAVyD,UAkChE,SAASC,EAAgBC,EAAGC,GACxB,IAAMC,EAAM,YAAOR,GACnBQ,EAAOF,GAAGP,MAAQQ,EAAME,OAAOV,MAC/BE,EAAaO,GAdjB,WACI,IAAIE,EAAM,EAETV,EAAUW,KAAK,SAAAC,GAAI,OAChBF,GAAOG,WAAWD,EAAKb,UAG3BH,EAAWiB,WAAWvB,GAAWuB,WAAWH,IAC5CI,QAAQC,IAAIL,GAQZM,GASF,SAASC,EAAUX,GACjB,IAAMY,EAAM,YAAOlB,GACbmB,EAAW,YAAOjB,GAExBgB,EAAOE,KAAK,CAAErB,MAAO,OACrBoB,EAAYC,KAAK,CAAErB,MAAO,OAE1BE,EAAaiB,GACbf,EAAkBgB,GAuBtB,SAASE,IACP3B,GAAU,GAuEZ,OACI,oCAEC,yBAAK4B,MAAM,sGAMR,6CAEA,wBAAIA,MAAM,0FAIIC,QA/FtB,WACE7B,GAAU,KA0FJ,WAMA,kBAAC,IAAD,CAAQ8B,OAAQ/B,EACRgC,YA9FhB,WACErC,EAASsC,MAAMC,MAAQ,QA8FTC,eAAgBP,EAChBK,MAAOzD,GAGX,wBAAI4D,IAAK,SAAAC,GAAS,OAAK1C,EAAW0C,IAAlC,4BAECjE,EAAa8C,KAAI,SAAAC,GAAI,OAClB,kBAAC9B,EAAD,KACA,uBAAGyC,QAAS,kBA/F5B,SAAyBX,GACrBd,EAAac,GA8FiBmB,CAAgBnB,EAAK5C,QAAvC,KAAiD4C,EAAK7C,KAAtD,UAIJ,wBAAKuD,MAAM,gBAAX,cAEA,wBAAIA,MAAM,yBAEN,wBAAIA,MAAM,oCAAV,WAMA,wBAAIA,MAAM,8CAAV,gBAMHtB,EAAUW,KAAI,SAACP,EAAe4B,GAC3B,OACA,yBAAKC,IAAG,UAAK7B,EAAL,YAAsB4B,GAAOV,MAAM,wGAOvC,kBAACrC,EAAD,CACIlB,KAAK,OACLmE,YAAalC,EAAUgC,GAAKjC,MAC5BoC,SAAU,SAAAC,GAAC,OAAI/B,EAAgB2B,EAAKI,MAGxC,kBAACnD,EAAD,CACIlB,KAAK,OACLmE,YAAahC,EAAe8B,GAAKjC,MACjCoC,SAAU,SAAAC,GAAC,OA9KnC,SAA8B9B,EAAGC,GAC7B,IAAMC,EAAM,YAAON,GACnBM,EAAOF,GAAGP,MAAQQ,EAAME,OAAOV,MAC/BI,EAAkBK,GA2KiB6B,CAAqBL,EAAKI,IACzCE,UAAW,SAAAF,GAvHpB,IAuHkCA,EAAEG,SAtH3CtB,OAyHY,4BAAQlD,KAAK,SAASwD,QAAS,kBAhKjD,SAAsBjB,GACpB,IAAMY,EAAM,YAAOlB,GACbmB,EAAW,YAAOjB,GAExBgB,EAAOsB,OAAOlC,EAAG,GACjBa,EAAYqB,OAAOlC,EAAG,GAEtBL,EAAaiB,GACbf,EAAkBgB,GAwJmCsB,CAAaT,KAAlD,SAOR,wCAAcrC,GAEd,4BAAQ5B,KAAK,SAASwD,QAAS,kBAAMN,MAArC,OAIA,4BAAQlD,KAAK,SAASwD,QAAS,kBA7N3C,WACI,IAAK,IAAIjB,EAAI,EAAGA,EAAIN,EAAU0C,OAAQpC,IAClCF,EAAcgB,KAAK,CACEzD,WAAYkD,WAAWX,EAAeI,GAAGP,OAAS,IAClDnC,OAAQiD,WAAWb,EAAUM,GAAGP,SAGzDe,QAAQC,IAAIX,GACZN,EAAaM,EAAcoC,OAAO,IAqNWG,KAArC,UAIA,kCACA,4BAAQpB,QAASF,GAAjB,UAIR,wBAAIC,MAAM,eACN,qCACCzB,EAAUc,KAAI,SAAAC,GAAI,OACf,gCAAMA,EAAKhD,OAAX,SAIR,wBAAI0D,MAAM,eACN,qCACCzB,EAAUc,KAAI,SAAAC,GAAI,OACf,iCAAyB,IAAlBA,EAAKjD,YAAkBiF,QAAQ,GAAtC,UAIR,wBAAItB,MAAM,eACN,qCACCzB,EAAUc,KAAI,SAAAC,GAAI,OACf,iCAAOC,WAAWxB,GAAeuB,EAAKjD,WAAakD,WAAWxB,IAAcuD,QAAQ,GAApF,SAIR,wBAAItB,MAAM,yBACN,wCACCzB,EAAUc,KAAI,SAAAC,GAAI,OACf,iCAAQA,EAAKhD,QAAUiD,WAAWxB,GAAeuB,EAAKjD,WAAakD,WAAWxB,KAAeuD,QAAQ,QAI7G,uBAAGtB,MAAM,yCAvKb,SAA4BuB,EAAcC,GAEtC,IAOIC,EAMAC,EA0BJ,OApCe,IACD,KACGH,IAUjBE,EAAc,EACblD,EAAUc,KAAI,SAAAC,GAAI,OACfmC,GAAiBnC,EAAKjD,WAAaiD,EAAKhD,OAAUgD,EAAKhD,UAW3DoF,EAFYF,KArBKD,MAeThD,EAAU,GAAGjC,OAAWiC,EAAU,GAAGlC,WAAakC,EAAU,GAAGjC,QAAWmF,GAGtDlD,EAAU,GAAGjC,QACb,EAAIiC,EAAU,GAAGlC,aArB9B,IAyBK,aAAiB,IAYjC,sDACgBqF,EAAOJ,QAAQ,GAD/B,KA+HKK,IAIT,uBAAG3B,MAAM,0CAAT,iBA7LJ,WACI,IAAIyB,EAMJ,OAJAA,EAAc,EACblD,EAAUc,KAAI,SAAAC,GAAI,OACfmC,GAAelC,YAAYD,EAAKhD,QAAUiD,WAAWxB,GAAeuB,EAAKjD,WAAakD,WAAWxB,KAAeuD,QAAQ,OAEpHG,EAuLoCG,GAAmBN,QAAQ,GADvE,O,sTCnZR,IAAMO,EAAmBpE,IAAOC,IAAV,KAoBP,SAASoE,EAAT,GAcX,IAbF/D,EAaC,EAbDA,YACAC,EAYC,EAZDA,QACA+D,EAWC,EAXDA,QAEAC,GASC,EAVD/D,OAUC,EATD+D,KACAC,EAQC,EARDA,QACAC,EAOC,EAPDA,KACAC,EAMC,EANDA,UACAC,EAKC,EALDA,SAEAC,GAGC,EAJDC,UAIC,EAHDD,QACAE,EAEC,EAFDA,OACAC,EACC,EADDA,QAEE,OACI,oCACA,kBAACX,EAAD,KACI,yCAAevC,EAAKmD,OAEpB,wBAAIzC,MAAM,eACN,6CAAmBjC,EAAnB,KACA,qCAAWiE,EAAX,OACA,0CAAgBhE,EAAhB,MACA,yCAAe+D,EAAf,MAGJ,wBAAI/B,MAAM,eACN,wCAAciC,EAAd,MACA,qCAAWC,EAAX,MACA,0CAAgBC,EAAhB,MACA,yCAAeC,EAAf,SAGJ,wBAAIpC,MAAM,yBACN,4CACA,0CAAgBqC,EAAhB,MACA,0CAAgBE,EAAhB,MACA,4CAIJ,6BAEA,4BAAQvC,MAAM,2NAcX,kBAAC,UAAD,CAASA,MAAM,2GAIkBV,KAAMkD,GAJvC,e,irBC5Ef,IAAME,EAAYjF,IAAOC,IAAV,KAqPAiF,MA9Mf,WAAgB,IAAD,EAEiBzE,mBAASoB,EAAKtB,SAF/B,mBAENA,EAFM,KAEG4E,EAFH,OAGiB1E,mBAASoB,EAAKuD,SAH/B,mBAGNd,EAHM,KAGGe,EAHH,OAIe5E,mBAASoB,EAAKrB,QAJ7B,mBAINA,EAJM,KAIE8E,EAJF,OAKS7E,mBAASoB,EAAK0C,KALvB,mBAKNA,EALM,KAKDgB,EALC,OAOiB9E,mBAASoB,EAAK2C,SAP/B,mBAONA,EAPM,KAOGgB,EAPH,OAQW/E,mBAASoB,EAAK4C,MARzB,mBAQNA,EARM,KAQAgB,EARA,OASqBhF,mBAASoB,EAAK6C,WATnC,mBASNA,EATM,KASKgB,EATL,OAUmBjF,mBAASoB,EAAK8C,UAVjC,mBAUNA,EAVM,KAUIgB,EAVJ,OAYelF,mBAASoB,EAAK+C,QAZ7B,mBAYNA,EAZM,KAYEgB,EAZF,OAaenF,mBAASoB,EAAKiD,QAb7B,mBAaNA,EAbM,KAaEe,EAbF,OAe+BpF,mBAAS,GAfxC,mBAeNqF,EAfM,KAyBb,SAASC,IAOP,OALAhE,QAAQC,IAAIF,WAAW4C,IACvB3C,QAAQC,IAAIF,WAAW0C,IACvBzC,QAAQC,IAAIF,WAAW2C,KAGf3C,WAAW4C,GACjB5C,WAAW0C,GACX1C,WAAW2C,GACX3C,WAAW8C,GACX9C,WAAWgD,GACX,IAAIjB,QAAQ,GAGhB,SAASmC,IACP,OACGlE,WAAWA,WAAWtB,IAAWoE,EAAS,OAA+B,GAAtB9C,WAAWvB,KAAiBsD,QAAQ,GA1C/E,KAoDb,IAAMkB,EAAU,CACd,CAAC,iBACD,CAAC,QAASiB,KACV,CAAC,gBAAiB,QAClB,CAAC,UAAWzF,GACZ,CAAC,UAAW+D,GACZ,CAAC,SAAU9D,GACX,CAAC,MAAO+D,GACR,CAAC,GAAI,IACL,CAAC,sBACD,CAAC,OAAQ,YACT,CAAC,UAAWC,GACZ,CAAC,UAAW,OACZ,CAAC,gBAAiBI,GAClB,CAAC,gBAAiBE,GAClB,CAAC,OAAQL,GACT,CAAC,YAAaC,GACd,CAAC,eAAgBC,GACjB,CAAC,GAAI,IACL,CAAC,0BACD,CAAC,OAAQ,WAAY,YAAaL,EAAS/D,GAC3C,CAAC,gBAAiB,SAAU,SAAU,GAAI,IAC1C,CAAC,gBAAiB,SAAU,SAAU,GAAI,IAC1C,CAAC,YAAa,SAAU,SAAU,GAAI,IACtC,CAAC,MAAO,QAAS,SAAU,GAAI,IAC/B,CAAC,aAAc,SAAU,QAAS,GAAI,KAKxC,OAEE,oCACA,kBAAC0E,EAAD,KACA,yBAAK1C,MAAM,sEAGuB0D,IAAKC,MAEvC,wBAAI3D,MAAM,yDAAV,mBAME,yBAAKA,MAAM,iHAIX,6CACA,4BACE,wCAAa,6BACX,2BAAOvD,KAAK,SACJmE,YAAa5C,EACb4F,KAAK,OACL/C,SAAU,SAAAC,GAAC,OAAI8B,EAAW9B,EAAE3B,OAAOV,WAI7C,uCAAY,6BACV,2BAAOhC,KAAK,SACLmE,YAAamB,EACb6B,KAAK,OACL/C,SAAU,SAAAC,GAAC,OAAIgC,EAAWhC,EAAE3B,OAAOV,WAI5C,sCAAW,6BACT,2BAAQhC,KAAK,SACLmE,YAAa3C,EACb2F,KAAK,OACL/C,SAAU,SAAAC,GAAC,OAAIiC,EAAUjC,EAAE3B,OAAOV,WAG5C,mCAAQ,6BACN,2BAAQhC,KAAK,SACLmE,YAAaoB,EAAM,IACnB4B,KAAK,OACLC,IAAI,IACJC,IAAI,MACJjD,SAAU,SAAAC,GAAC,OAtF3B,SAAuBkB,GACrBqB,EAAU9D,WAAiB,IAANyC,GAAYV,QAAQ,IACzCgC,EAAU/D,WAAiB,IAANyC,GAAYV,QAAQ,IACzC0B,EAAOzD,WAAWyC,GAAKV,QAAQ,IAmFFyC,CAAcjD,EAAE3B,OAAOV,WAGhD,6BACA,wBAAIuB,MAAM,qCAAV,qBACiDuD,EAAejC,QAAQ,GADxE,QAMF,yBAAKtB,MAAM,iHAGX,oDACA,4BACE,uCAAY,6BACV,2BAAQvD,KAAK,SACLmE,YAAaqB,EAAU,IACvB2B,KAAK,OACL/C,SAAU,SAAAC,GAAC,OAAImC,EAAWnC,EAAE3B,OAAOV,WAG7C,oCAAS,6BACP,2BAAQhC,KAAK,SACLmE,YAAasB,EAAO,IACpB0B,KAAK,OACL/C,SAAU,SAAAC,GAAC,OAAIoC,EAAQpC,EAAE3B,OAAOV,WAG1C,0CAAe,6BACb,2BAAOhC,KAAK,SACLmE,YAAauB,EAAY,IACzByB,KAAK,OACL/C,SAAU,SAAAC,GAAC,OAAIqC,EAAarC,EAAE3B,OAAOV,WAG9C,yCAAc,6BACZ,2BAAOhC,KAAK,OACLmE,YAAawB,EACbvB,SAAU,SAAAC,GAAC,OAAIsC,EAAYtC,EAAE3B,OAAOV,WAG7C,6BACA,wBAAIuB,MAAM,qCAAV,2BACyF,GAAlCwD,IAA0B,MAAWlC,QAAQ,GADpG,QAQJ,kBAACzD,EAAD,CAAYI,OAAQA,EACRD,QAASA,EACTD,YAAa0F,MAGzB,kBAAC,EAAD,CAAQ1F,YAAa0F,IACbzF,QAASA,EACT+D,QAASA,EACT9D,OAAQA,EACR+D,IAAKA,EACLC,QAASA,EACTC,KAAMA,EACNC,UAAWA,EACXC,SAAUA,EACVC,OAAQA,EACRE,OAAQA,EACRC,QAASA,OC5ODwB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLzF,QAAQyF,MAAMA,EAAMC,c","file":"static/js/main.bb38e925.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo-lid.20b6644e.png\";","export const BonusData = [\n    {\n        Percentage: 0.25,\n        Amount: 200.00\n    },\n    {\n        Percentage: 0.20,\n        Amount: 300.00\n    },\n    {\n        Percentage: 0.15,\n        Amount: 500.00\n    },\n    {\n        Percentage: 0.10,\n        Amount: 250.00\n    }\n]","import React , {useEffect, useState} from 'react';\nimport {BonusData} from '../config'\nimport  {Get_liq_percentage} from '../utils/calculate_bonus'\nimport styled from \"styled-components\";\n\nimport Modal from 'react-modal';\n\nconst bonusOptions = [\n    {\n        id: \"1\",\n        type: \"25% - 10%\",\n        info: [{\n                Percentage: 0.25,\n                Amount: 200.00\n            },\n            {\n                Percentage: 0.20,\n                Amount: 300.00\n            },\n            {\n                Percentage: 0.15,\n                Amount: 500.00\n            },\n            {\n                Percentage: 0.10,\n                Amount: 250.00\n            }]\n    },\n    {\n        id: \"2\",\n        type: \"35% - 5%\",\n        info:  [{\n            Percentage: 0.35,\n            Amount: 400.00\n        },\n        {\n            Percentage: 0.10,\n            Amount: 100.00\n        },\n        {\n            Percentage: 0.08,\n            Amount: 200.00\n        },\n        {\n            Percentage: 0.05,\n            Amount: 550.00\n        }]\n    },\n    {\n        id: \"3\",\n        type: \"30% - 10%\",\n        info:  [{\n            Percentage: 0.30,\n            Amount: 250.00\n        },\n        {\n            Percentage: 0.20,\n            Amount: 250.00\n        },\n        {\n            Percentage: 0.10,\n            Amount: 175.00\n        },\n        {\n            Percentage: 0.00,\n            Amount: 550.00\n        }]\n    },\n    {\n        id: \"4\",\n        type: \"10% - 1%\",\n        info: [{\n            Percentage: 0.714,\n            Amount: 200.00\n        },\n        {\n            Percentage: 0.714,\n            Amount: 300.00\n        },\n        {\n            Percentage: 0.714,\n            Amount: 500.00\n        },\n        {\n            Percentage: 0.714,\n            Amount: 250.00\n        }]\n    },\n]\n\n\nconst customStyles = {\n  content : {\n    top                   : '320px',\n    left                  : '30%',\n    right                 : 'auto',\n    bottom                : 'auto',\n    marginRight           : '-50%',\n    transform             : 'translate(-50%, -50%)',\n    padding : \"0\",\n    paddingLeft: \"30px\",\n    paddingRight: \"30px\",\n    paddingBottom: \"20px\",\n    borderRadius: \"15px\"\n  }\n};\n\nconst SelectBonusStructer = styled.div`\n    border: 2px solid #E4E4E4;\n    border-radius: 15px;\n    padding: 0px;\n    margin-bottom: 15px;\n    text-align: center;\n    margin-right: 50px;\n\n    :hover{\n        cursor: pointer;\n        background-color: #ededed;\n    }\n`\n\nconst Input = styled.input`\n    margin-top: 3px;\n    margin-right: 10px;\n    border-radius: 8px;\n    border: 2px solid #d1d1d1;\n    padding: 5px;\n    width: 250px;\n\n    :focus{\n        outline: 0;\n        box-shadow: 0 0 5px blue;\n      }\n`\n\nexport default function BonusRange ({token_price, supply, hardcap}) {\n    var subtitle;\n\n    const [modalIsOpen , setIsOpen] = useState(false);\n    const [HardCap, setHardCap] = useState(hardcap);\n    const [bonusData, setbonusData] = useState(BonusData);\n\n    const [newRanges, setNewRanges] = useState([{value: null}]);\n    const [newPercentages, setNewPercentages] = useState([{value: null}]);\n\n    const [newBonusRange, setNewBonusRange] = useState([ {Percentage: newPercentages , Amount: newRanges }])\n\n    function create_new_bonus(){\n        for (var i = 0; i < newRanges.length; i++) {\n            newBonusRange.push({ \n                                 Percentage: parseFloat(newPercentages[i].value) / 100 ,\n                                 Amount: parseFloat(newRanges[i].value)  \n                                })\n        }\n        console.log(newBonusRange);\n        setbonusData(newBonusRange.splice(1));\n    }\n\n    function updateHardCap(){\n        var sum = 0;\n\n        {newRanges.map( data =>\n            sum += parseFloat(data.value)\n        )}\n\n        setHardCap(parseFloat(hardcap) - parseFloat(sum))\n        console.log(sum);\n    }\n\n    function updateNewRanges(i, event) {\n        const values = [...newRanges];\n        values[i].value = event.target.value;\n        setNewRanges(values);\n\n        updateHardCap();\n      }\n\n    function updateNewPercentages(i, event) {\n        const values = [...newPercentages];\n        values[i].value = event.target.value;\n        setNewPercentages(values);\n      }\n    \n      function handleAdd(i) {\n        const ranges = [...newRanges];\n        const percentages = [...newPercentages];\n\n        ranges.push({ value: null });\n        percentages.push({ value: null})\n        \n        setNewRanges(ranges);\n        setNewPercentages(percentages);\n      }\n    \n    \n      function handleRemove(i) {\n        const ranges = [...newRanges];\n        const percentages = [...newPercentages];\n\n        ranges.splice(i, 1);\n        percentages.splice(i, 1);\n        \n        setNewRanges(ranges);\n        setNewPercentages(percentages)\n      }\n    \n    function openModal() {\n      setIsOpen(true);\n    }\n   \n    function afterOpenModal() {\n      subtitle.style.color = '#f00';\n    }\n   \n    function closeModal(){\n      setIsOpen(false);\n    }\n\n    function updateBonusData(data){\n        setbonusData(data);\n    }\n\n    function get_total_tokens(){\n        var totalAmount;\n\n        totalAmount = 0;\n        {bonusData.map(data => \n            totalAmount += parseFloat((data.Amount * (parseFloat(token_price) * data.Percentage + parseFloat(token_price))).toFixed(2))\n        )}\n        return (totalAmount);\n    }\n\n    function checkKey(key){\n        if (key == 13) {\n            handleAdd()\n        }\n    }\n\n    function get_liq_percentage(token_supply, ETH_HardCap) {\n    \n        var Result;\n        var presale_tokens;\n    \n        token_supply = 300000.00;\n        ETH_HardCap = 1250.00;\n        presale_tokens = token_supply * 0.3\n    \n        var totalAmount;\n        var ref;\n        var sampleAmount;\n        var bonusPrice;\n        var targetPrice;\n        var eth_liq;\n        var Result;\n    \n        totalAmount = 0;\n        {bonusData.map(data => \n            totalAmount += ((data.Percentage * data.Amount) + data.Amount)\n        )}\n    \n        ref = ((bonusData[0].Amount) + (bonusData[0].Percentage * bonusData[0].Amount)) / totalAmount;\n        sampleAmount = presale_tokens  * ref;\n    \n        bonusPrice = sampleAmount / bonusData[0].Amount;\n        targetPrice = bonusPrice / (1 + bonusData[0].Percentage);\n    \n        eth_liq = ((ETH_HardCap / 2) * targetPrice) / token_supply;\n    \n        Result = (eth_liq / 0.83322517845) * 100\n        \n        //For Testing and Debuging\n        // console.log(\"Total Amount: \" + totalAmount);\n        // console.log(\"ref: \" + ref);\n        // console.log(\"sampleAmount: \" + sampleAmount);\n        // console.log(\"bonusPrice: \" + bonusPrice);\n        // console.log(\"targetPrice: \" + targetPrice);\n        // console.log(\"eth_liq: \" + eth_liq);\n        // console.log(\"Result: \", Result);\n    \n        return (\n            <>\n            Recommend LIQ: {Result.toFixed(2)}%\n            </>\n        );\n    }\n    \n    return (\n        <>\n\n         <div Style=\"display:inline-block;\n            margin-bottom: 100px;\n            background-color: white;\n            color: #0c65EB;\n            width: 398px;\">\n\n            <h2> Bonus Range </h2>\n\n            <h3 Style=\"text-decoration: underline;\n                        margin-left: 40px;\n                        margin-bottom: -5px;\n                        margin-top: -10px;\n                        \" onClick={openModal}> Select</h3>\n\n            <Modal  isOpen={modalIsOpen}\n                    onAfterOpen={afterOpenModal}\n                    onRequestClose={closeModal}\n                    style={customStyles}\n                    >\n            \n                <h2 ref={_subtitle => (subtitle = _subtitle)}> Select Bonus Structure </h2>\n\n                {bonusOptions.map(data =>\n                    <SelectBonusStructer> \n                    <p onClick={() => updateBonusData(data.info)}> ({data.type}) </p>\n                    </SelectBonusStructer>\n                )}\n                \n                <h3  Style=\"Color: #f00 \">Create Own</h3>\n\n                <ul Style=\"list-style-type: none\">\n                    \n                    <li Style=\"float: left;\n                                margin-left: 40px;\n                                \"\n                                >\n                                Amount </li>\n                    \n                    <li Style=\"display: inline-block;\n                               margin-left: 190px;\"\n                               >\n                                Percentage </li>\n                </ul>\n                \n                {newRanges.map((newBonusRange, idx) => {\n                    return (\n                    <div key={`${newBonusRange}-${idx}`} Style=\" input {\n                        margin-top: 3px;\n                        border-radius: 5px;\n                        border: 2px solid black;\n                        padding: 5px;\n                        width: 250px;\n                      }\">\n                        <Input\n                            type=\"text\"\n                            placeholder={newRanges[idx].value}\n                            onChange={e => updateNewRanges(idx, e)}\n                            />\n\n                        <Input\n                            type=\"text\"\n                            placeholder={newPercentages[idx].value} \n                            onChange={e => updateNewPercentages(idx, e)}\n                            onKeyDown={e => checkKey(e.keyCode)}\n                            />\n                        \n                        <button type=\"button\" onClick={() => handleRemove(idx)}>\n                        X\n                        </button>\n                    </div>\n                    );\n                })}\n                \n                <p>ETH left: {HardCap}</p>\n\n                <button type=\"button\" onClick={() => handleAdd()}>\n                    Add\n                </button>\n\n                <button type=\"button\" onClick={() => create_new_bonus()}>\n                    submit\n                </button>\n                                                        \n                <p>...</p>\n                <button onClick={closeModal}>close</button>\n\n            </Modal>\n                        \n        <ul Style=\"float: left\">\n            <li>Range</li>\n            {bonusData.map(data => \n                <li> {data.Amount} </li>    \n            )}\n        </ul>\n\n        <ul Style=\"float: left\">\n            <li>Bonus</li>\n            {bonusData.map(data => \n                <li> {(data.Percentage * 100).toFixed(2)}% </li>    \n            )}\n        </ul>\n\n        <ul Style=\"float: left\">\n            <li>Price</li>\n            {bonusData.map(data => \n                <li> {(parseFloat(token_price) * data.Percentage + parseFloat(token_price)).toFixed(0)} </li>    \n            )}\n        </ul>\n\n        <ul Style=\"display: inline-block\">\n            <li> Tokens </li>\n            {bonusData.map(data => \n                <li> { (data.Amount * (parseFloat(token_price) * data.Percentage + parseFloat(token_price))).toFixed(0)}</li>    \n            )}   \n        </ul>\n            \n        <p Style=\"margin-left: 40px;\n                 font-weight: bold;\">\n                {get_liq_percentage(supply, hardcap)}\n        </p>\n        \n\n        <p Style=\"margin-left: 200px;\n                 font-weight: bold;\">Total Tokens: {get_total_tokens().toFixed(0)} </p>\n        </div>\n\n       \n      </>\n    )\n}","import React , {useEffect, useState} from 'react';\nimport styled from \"styled-components\";\nimport { CSVLink } from \"react-csv\";\n\nimport get_token_price from '../utils/calculate_toke_price'\n\nimport data from '../data.json';\n\nconst ResultsContainer = styled.div`\n  font-family: Gotham, sans-serif;\n  background-color:#737373;\n  \n  margin-top: -35px;\n\n  font-weight: bold;\n\n  ul {\n    margin-right: 80px;\n    margin-top: -5px;\n    width: 250px;\n  }\n\n  h2 {\n    margin-right: 750px\n  }\n\n`\n\nexport default function Results ( {\n  token_price,\n  hardcap,\n  softCap,\n  supply,\n  liq,\n  staking,\n  team,\n  marketing,\n  unlocked,\n  remaining,\n  ethLiq,\n  lidLiq,\n  csvData\n}) {\n    return (\n        <>\n        <ResultsContainer> \n            <h2> Result: ${data.Token}</h2>\n\n            <ul Style=\"float: left\">\n                <li> Token Price: {token_price} </li>\n                <li> LIQ: {liq}%  </li>\n                <li>  Hardcap: {hardcap}  </li>\n                <li> Softcap: {softCap} </li>\n            </ul>\n\n            <ul Style=\"float: left\">\n                <li>Staking: {staking}% </li>\n                <li>Team: {team}% </li>\n                <li>Marketing: {marketing}% </li>\n                <li>Unlocked: {unlocked} 5% </li>\n            </ul>\n\n            <ul Style=\"display: inline-block\">\n                <li>Presale: 30%</li>\n                <li>Liq (eth): {ethLiq}% </li>\n                <li>Lia (lid): {lidLiq}% </li>\n                <li>LID Fee: 1%</li>\n            </ul>\n\n\n            <br /> \n\n            <button Style=\"font-size: 18px;\n                            display: inline-block;\n                            border:2px solid #D8E0E7;\n                            border-radius:25px;\n                            background-color: #D8E0E7;\n                            width: 173px;\n                            height: 35px;\n                            margin-bottom:20px;\n                            margin-left: 30px;\n                            z-index: 2;\n                            text-decoration: none;\n                            \"\n            // onClick={() => calculate_outcome()}\n            >\n               <CSVLink Style=\"text-decoration: none;\n                               font-size: 18px;\n                               font-family: Gotham, sans-serif;\n                               font-weight: 0;\n                               color:  #4A4A4A\" data={csvData}> Submit </CSVLink>\n            </button>  \n      \n      </ResultsContainer> \n    </>\n    )\n}","import React , {useEffect, useState} from 'react';\nimport styled from \"styled-components\";\nimport { CSVLink } from \"react-csv\";\n\nimport data from './data.json';\nimport LidLogo from './images/logo-lid.png';\n\nimport BonusRange from './components/BonusRange'\nimport Result from './components/Result'\n\nconst Container = styled.div`\n  font-family: 'Gotham', sans-serif;\n  background-color: #E4E4E4;;\n  margin-top: -20px;\n  padding-top: 20px;\n  padding-bottom: 10px;\n\n  div {\n    background-color: #4A4A4A;\n    padding-right: 50px;\n    border: 2px solid #E4E4E4;\n    border-radius: 15px;\n    color: #E4E4E4;\n    margin-left: 18px;\n    margin-right: 18px;\n  }\n  \n  ul {\n    list-style-type: none;\n  }\n\n  li {\n    padding-top: 5px;\n  }\n\n  h2 {\n    margin-left: 40px;\n    margin-top: 10px;\n  }\n\n  input {\n    margin-top: 3px;\n    border-radius: 5px;\n    border: 2px solid black;\n    padding: 5px;\n    width: 250px;\n  }\n`\n\nfunction App() {\n\n  const [hardcap, setHardcap] = useState(data.hardcap);\n  const [softCap, setSoftCap] = useState(data.softcap);\n  const [supply, setSupply] = useState(data.supply);\n  const [liq, setLiq] = useState(data.liq);\n\n  const [staking, setStaking] = useState(data.staking);\n  const [team, setTeam] = useState(data.team);\n  const [marketing, setMarketing] = useState(data.marketing);\n  const [unlocked, setUnlocked] = useState(data.unlocked)\n\n  const [ethLiq, setEthliq] = useState(data.ethLiq);\n  const [lidLiq, setLidliq] = useState(data.lidLiq);\n\n  const [reccomendedLiq, setReccomendedLiq] = useState(0);\n\n  //const [presale, setPresale] = useState(); Always 30%\n\n  function calculate_outcome() {\n    get_total_distrubtion();\n    get_token_price();\n//    setLiq(get_liq_percentage(supply , hardcap))\n  }\n\n  function get_total_distrubtion() {\n\n    console.log(parseFloat(marketing));\n    console.log(parseFloat(staking));\n    console.log(parseFloat(team));\n\n    //36 comes from 30% presale, 5% unlocked, 1% LID fee\n    return((parseFloat(marketing) \n    + parseFloat(staking) \n    + parseFloat(team) \n    + parseFloat(ethLiq)\n    + parseFloat(lidLiq)\n    + 36).toFixed(2))\n  }\n\n  function get_token_price() {\n    return (\n      (parseFloat(parseFloat(supply) * (ethLiq / 100)) / (parseFloat(hardcap) * 0.5)).toFixed(2)\n    )\n  };\n\n  function calculate_liq(liq) {\n    setEthliq(parseFloat(liq * 0.83).toFixed(2));\n    setLidliq(parseFloat(liq * 0.17).toFixed(2))\n    setLiq(parseFloat(liq).toFixed(2));\n  }\n\n  const csvData = [\n    [\"Token Presale\"],\n    [\"Price\", get_token_price()],\n    [\"Refferall Fee\", \"2.5%\"],\n    [\"Hardcap\", hardcap],\n    [\"Softcap\", softCap],\n    [\"Supply\", supply],\n    [\"liq\", liq],\n    [\"\", \"\"],\n    [\"Token Distribution\"],\n    [\"Fund\", \"Quantity\"],\n    [\"Staking\", staking],\n    [\"Presale\", \"30%\"],\n    [\"liq (xxx/ETH)\", ethLiq],\n    [\"liq (xxx/LID)\", lidLiq],\n    [\"Team\", team ],\n    [\"Marketing\", marketing],\n    [\"Unlocked: 5%\", unlocked],\n    [\"\", \"\"],\n    [\"Ether Distribution (%)\"],\n    [\"Fund\", \"Quantity\", \"Remaining\", softCap, hardcap],\n    [\"liq (XXX/ETH)\", \"50.00%\", \"50.00%\", \"\", \"\"],\n    [\"liq (XXX/LID)\", \"10.00%\", \"40.00%\", \"\", \"\"],\n    [\"TEAM+FUND\", \"20.00%\", \"20.00%\", \"\", \"\"],\n    [\"LID\", \"5.00%\", \"15.00%\", \"\", \"\"],\n    [\"Token Burn\", \"15.00%\", \"0.00%\", \"\", \"\"],\n  ];\n\n  \n\n  return (\n\n    <>\n    <Container>\n    <img Style=\"width: 50px;\n                height: 50px;\n                margin-left: 20px;\n                margin-bottom: -60px;\"src={LidLogo} />\n\n    <h2 Style=\" font-size: 28px;\n                color: #0c65EB;\n                margin-left: 90px;\n                \">\n                Term Sheet App </h2>\n\n      <div Style=\"float: left;\n                  background: linear-gradient(0deg, rgba(12,101,235,1) 0%, rgba(28,158,247,1) 100%);\n                  color: white;\"> \n\n      <h2>Token Presale</h2>\n      <ul>\n        <li> HardCap <br />\n          <input type=\"number\" \n                  placeholder={hardcap} \n                  step=\"0.01\"\n                  onChange={e => setHardcap(e.target.value)} />\n        </li>\n\n\n        <li>SoftCap <br />\n          <input type=\"number\" \n                 placeholder={softCap} \n                 step=\"0.01\"\n                 onChange={e => setSoftCap(e.target.value)} />\n        </li>\n\n\n        <li>Supply <br />\n          <input  type=\"number\" \n                  placeholder={supply} \n                  step=\"0.01\"\n                  onChange={e => setSupply(e.target.value)} />\n        </li>\n\n        <li>LIQ <br />\n          <input  type=\"number\" \n                  placeholder={liq + \"%\"}\n                  step=\"0.01\" \n                  min=\"0\"\n                  max=\"100\"\n                  onChange={e => calculate_liq(e.target.value)} />\n        </li>\n\n        <br />\n        <li Style=\"color: #7FFF00;\n                   font-weight: bold\"> Reccomended LIQ: {reccomendedLiq.toFixed(2)}% </li>\n       \n      </ul>\n      </div>\n\n      <div Style=\"float: left;\n              background: linear-gradient(0deg, rgba(12,101,235,1) 0%, rgba(28,158,247,1) 100%);\n              color: white;\">\n      <h2> Token Distribution </h2>\n      <ul>\n        <li>Staking <br />\n          <input  type=\"number\" \n                  placeholder={staking + \"%\"} \n                  step=\"0.01\" \n                  onChange={e => setStaking(e.target.value)} />\n        </li>\n\n        <li>Team <br /> \n          <input  type=\"number\" \n                  placeholder={team + \"%\"}\n                  step=\"0.01\" \n                  onChange={e => setTeam(e.target.value)} />\n        </li>\n\n        <li> Marketing <br />\n          <input type=\"number\" \n                 placeholder={marketing + \"%\"}\n                 step=\"0.01\" \n                 onChange={e => setMarketing(e.target.value)} />  \n        </li> \n\n        <li> Unlocked <br />\n          <input type=\"text\" \n                 placeholder={unlocked}\n                 onChange={e => setUnlocked(e.target.value)} />  \n        </li> \n        \n        <br />\n        <li Style=\"color: #8B0000;\n                   font-weight: bold\"> Distrubtion Remaing: {((get_total_distrubtion() - 100) * -1).toFixed(2)}% </li>\n      </ul>\n    </div>\n\n\n\n\n    <BonusRange supply={supply}\n                hardcap={hardcap}\n                token_price={get_token_price()}\n                 />\n\n    <Result token_price={get_token_price()}\n            hardcap={hardcap}\n            softCap={softCap}\n            supply={supply}\n            liq={liq}\n            staking={staking}\n            team={team}\n            marketing={marketing}\n            unlocked={unlocked}\n            ethLiq={ethLiq}\n            lidLiq={lidLiq}\n            csvData={csvData}/>\n    </Container>\n    </>\n    \n  )\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}